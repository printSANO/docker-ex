version: '3.3'

services:
  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   ports:
  #     - 8080:80
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - react
    
  react:
    build:
      context: ./frontend
    container_name: react
    stdin_open: true
    command: sh -c "npm run dev"
    ports:
      - 5173:5173
    volumes:
      - ./frontend:/app/frontend

  mysqldb:
    image: mysql:latest
    container_name: mysqldb
    restart: always
    environment:
      MYSQL_DATABASE: "testdb"
      MYSQL_USER: "admin"
      MYSQL_PASSWORD: "root"
      MYSQL_ROOT_PASSWORD: "root"
    ports:
      - '3306:3306'
    expose:
      - 3306
    volumes:
      - sql-db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uadmin", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-tier
  
  # mongoose:
  #   image: mongo:latest
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: password
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - mongobo-db:/data/db
  
  django:
    build:
      context: ./backend
    container_name: django
    command: sh -c "python3 manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    stdin_open: true
    ports:
      - 8000:8000
    # expose:
    #   - 8000
    volumes:
      - ./backend/:/backend/
      - sql-db:/var/lib/mysql
    depends_on:
      - mysqldb
      # - mongoose
    networks:
      - app-tier
    restart: always
  
  rabbitmq:
    image: rabbitmq:3.7-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    expose:
      - 5672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    depends_on:
      - django
    tty: true
    networks:
      - app-tier

  celery:
    build:
      context: ./backend
    command: sh -c "celery -A dockertest worker --loglevel=info --detach"
    volumes:
      - ./backend/:/backend/
    depends_on:
      - django
      - rabbitmq
  


volumes:
  sql-db:
  mongobo-db:

networks:
  app-tier:
    driver: bridge
